generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  username       String
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Model {
  id             String           @id @default(uuid())
  name           String
  type           ModelTypeEnum
  age            Int
  ethinicity     EthinicityEnum
  eyeColor       EyeColorEnum
  bald           Boolean
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userId         String
  outputImages   OutputImages[]
  TrainingImages TrainingImages[]
}

model OutputImages {
  id       String                @id @default(uuid())
  imageUrl String
  modelId  String
  userId   String
  prompt   String
  status   OutputImageStatusEnum @default(Pending)
  model    Model                 @relation(fields: [modelId], references: [id])
}

model Packs {
  id      String        @id @default(uuid())
  name    String
  prompts PackPrompts[]
}

model PackPrompts {
  id     String @id @default(uuid())
  prompt String
  packId String
  pack   Packs  @relation(fields: [packId], references: [id])
}

model TrainingImages {
  id       String @id
  imageUrl String
  modelId  String
  Model    Model  @relation(fields: [modelId], references: [id])
}

enum OutputImageStatusEnum {
  Pending
  generated
  Failed
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}

enum EthinicityEnum {
  White
  Black
  Asian_American   @map("Asian American")
  East_Asian       @map("East Asian")
  South_East_Asian @map("South East Asian")
  South_Asian      @map("South Asian")
  Middle_Eastern   @map("Middle Eastern")
  Pacific
  Hispanic
}
